name: Deploy Essaypig

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DS_API_URL: ${{ secrets.DS_API_URL }}
      DS_API_KEY: ${{ secrets.DS_API_KEY }}
      DS_MODEL: ${{ secrets.DS_MODEL }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} bash -s <<EOF
          #!/bin/bash
          set -eo pipefail
          
          export NVM_DIR="\$HOME/.nvm"
          [ -s "\$NVM_DIR/nvm.sh" ] && . "\$NVM_DIR/nvm.sh"
          
          nvm install 18
          nvm use 18
          
          export NODE_OPTIONS="--max-old-space-size=2048"
          
          sudo swapon --show | grep -q '/swapfile' || (
            echo "Creating 2G swap..."
            sudo fallocate -l 2G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
          )
          
          npm install -g yarn@1.22.22
          
          cd /var/www/essaypig
          
          echo "Creating frontend .env"
          echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" > .env
          echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env
          echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env
          
          echo "Creating backend .env"
          cat > server/.env <<ENV
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          DS_API_URL=${{ secrets.DS_API_URL }}
          DS_API_KEY=${{ secrets.DS_API_KEY }}
          DS_MODEL=${{ secrets.DS_MODEL }}
          RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          FIREBASE_SERVICE_ACCOUNT_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          ENV
          
          echo "Pulling latest code..."
          git stash || true
          git pull origin main
          git stash pop || true
          
          echo "Installing PM2..."
          npm install -g pm2
          
          echo "Installing dependencies..."
          yarn install --frozen-lockfile
          
          echo "Building client..."
          yarn workspace client build
          
          echo "Building server..."
          yarn workspace server build
          
          echo "Starting server with PM2..."
          pm2 restart essaypig-server || pm2 start server/dist/index.js --name essaypig-server
          
          echo "Cleaning up frontend .env"
          rm -f .env
          
          echo "âœ… Deployment complete"
          EOF
          