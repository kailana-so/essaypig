name: Deploy Essaypig

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DS_API_URL: ${{ secrets.DS_API_URL }}
      DS_API_KEY: ${{ secrets.DS_API_KEY }}
      DS_MODEL: ${{ secrets.DS_MODEL }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy via SSH (no nvm)
        run: |
          ssh -o StrictHostKeyChecking=no -T ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} 'bash -s' <<'EOF'
          set -euo pipefail
          set -x
          trap 'echo "❌ failed at: $BASH_COMMAND"; exit 1' ERR

          # Ensure yarn & pm2 exist (use Yarn Classic for --frozen-lockfile)
          if ! command -v yarn >/dev/null 2>&1; then
            sudo npm i -g yarn@1.22.22
          fi
          if ! command -v pm2 >/dev/null 2>&1; then
            sudo npm i -g pm2
          fi

          node -v
          npm -v
          yarn -v
          pm2 -v

          cd /var/www/essaypig

          echo "Pulling latest code..."
          git fetch origin main
          git reset --hard origin/main

          echo "Writing frontend .env"
          cat > client/.env <<ENV
          VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          ENV

          echo "Writing backend .env"
          cat > server/.env <<ENV
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
          AWS_REGION=${{ secrets.AWS_REGION }}
          DS_API_URL=${{ secrets.DS_API_URL }}
          DS_API_KEY=${{ secrets.DS_API_KEY }}
          DS_MODEL=${{ secrets.DS_MODEL }}
          RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          FIREBASE_SERVICE_ACCOUNT_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
          ENV

          echo "Installing dependencies..."
          yarn install --frozen-lockfile

          echo "Building client..."
          yarn workspace client build

          echo "Building server..."
          yarn workspace server build

          echo "Starting server with PM2..."
          pm2 restart server || pm2 start server/dist/index.js --name server
          pm2 save

          echo "✅ Deployment complete"
          EOF
