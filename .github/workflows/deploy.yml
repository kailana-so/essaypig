name: Deploy Essaypig

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DS_API_URL: ${{ secrets.DS_API_URL }}
      DS_API_KEY: ${{ secrets.DS_API_KEY }}
      DS_MODEL: ${{ secrets.DS_MODEL }}
      RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
      FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
      NODE_ENV: ${{ secrets.NODE_ENV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}

      - name: Deploy via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} <<'EOF'
            set -e

            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

            nvm install 18
            nvm use 18

            corepack enable
            corepack prepare yarn@4.9.2 --activate

            # Prevent OOM: add swap
            sudo swapon --show | grep -q '/swapfile' || (
              echo "Creating 2G swap..."
              sudo fallocate -l 2G /swapfile
              sudo chmod 600 /swapfile
              sudo mkswap /swapfile
              sudo swapon /swapfile
            )

            export NODE_OPTIONS="--max-old-space-size=2048"

            # Clone fresh if folder missing
            if [ ! -d /var/www/essaypig ]; then
              echo "Cloning fresh..."
              git clone https://github.com/kailana-so/essaypig.git /var/www/essaypig
            fi

            cd /var/www/essaypig

            echo "Creating frontend .env"
            cat <<EOT > .env
            VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
            VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
            VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
            VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
            VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
            VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
            EOT

            echo "Creating backend .env"
            cat <<EOT > server/.env
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}
            AWS_REGION=${{ secrets.AWS_REGION }}
            DS_API_URL=${{ secrets.DS_API_URL }}
            DS_API_KEY=${{ secrets.DS_API_KEY }}
            DS_MODEL=${{ secrets.DS_MODEL }}
            RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}
            NODE_ENV=${{ secrets.NODE_ENV }}
            FIREBASE_SERVICE_ACCOUNT_KEY=${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}
            EOT

            echo "Pulling latest code..."
            git fetch origin
            git reset --hard origin/main

            echo "Installing PM2..."
            npm install -g pm2

            echo "Installing dependencies..."
            yarn install --immutable

            echo "Building frontend..."
            yarn workspace client build

            echo "Building backend..."
            yarn workspace server build

            echo "Starting server with PM2..."
            pm2 restart essaypig-server || pm2 start server/dist/index.js --name essaypig-server

            echo "Cleanup..."
            rm -f .env

            echo "âœ… Deploy complete"
          EOF
